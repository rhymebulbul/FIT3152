cat(res[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(res[[4]], "\n")
cat("\n")
counter <- counter + 1
}
rm(list = ls())
set.seed(31865224)
cvbase = read.csv("PsyCoronaBaselineExtract.csv")
cvbase <- cvbase[sample(nrow(cvbase), 40000), ]
library(ggplot2)
library(dplyr)
library(tidyr)
dim(cvbase)
as.data.frame(sapply(cvbase, class))
summary(cvbase, na.rm = TRUE)
sort(unique(cvbase$coded_country))
table(cvbase$coded_country)
max(table(cvbase$coded_country))
which(table(cvbase$coded_country) == max(table(cvbase$coded_country)))
min(table(cvbase$coded_country))
which(table(cvbase$coded_country) == min(table(cvbase$coded_country)))
cvbase[is.na(cvbase)] <- 0
croatia <- cvbase[cvbase$coded_country == "Croatia", ]
others <- anti_join(cvbase, croatia)
numeric_cols <- sapply(croatia, is.numeric)
means <- colMeans(croatia[, numeric_cols], na.rm = TRUE)
croatia_means <- data.frame(mean = means)
numeric_cols <- sapply(others, is.numeric)
others_means <- colMeans(others[, numeric_cols], na.rm = TRUE)
others_means <- data.frame(mean = others_means)
croatia_plotted <- ggplot(croatia_means) +
geom_bar(mapping = aes(x = rownames(croatia_means), y = mean), stat = "identity",
fill = "blue") +
coord_flip() +
labs(x = "Survey questions", y = "Mean responses",
title = "Mean of responses for each question in Croatia")
world_plotted <- ggplot(others_means) +
geom_bar(mapping = aes(x = rownames(others_means), y = mean), stat = "identity",
fill = "red") +
coord_flip() +
labs(x = "Survey questions", y = "Mean responses",
title = "Mean of responses for each question over the globe")
croatia_plotted
world_plotted
numeric_croatia <- croatia[sapply(croatia, is.numeric)]
croatia_correlation <- cor(numeric_croatia, use = "complete.obs")
#diag(croatia_cor) <- NA
croatia_melted <- reshape2::melt(croatia_correlation, na.rm = TRUE)
croatia_correlation_plot <- ggplot(data = croatia_melted, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "#6b74ff", mid = "white", high = "#e46c6c", midpoint = 0) +
labs(title = "Correlation between each of Croatia's predictors", x = "", y = "",
fill = "correlation") +
theme(axis.text.x = element_text(angle = 90))
croatia_correlation_plot
predictors <- NULL
each_model <- NULL
model_evaluated <- function(model) {
rsquared <- summary(model)$r.squared
adjusted_rsquared <- summary(model)$adj.r.squared
sig <- which(summary(model)$coefficients[-1, 4] < 0.001) + 1
predictor <- rownames(summary(model)$coefficients[sig, , drop = FALSE])
coefficient <- summary(model)$coefficients[sig, 1]
return(list(rsquared, adjusted_rsquared, predictor, coefficient))
}
fitted_croatia1 <- lm(c19ProSo01 ~ .,
data = subset(croatia, select = -c(coded_country, c19ProSo02, c19ProSo03, c19ProSo04)))
fitted_croatia2 <- lm(c19ProSo02 ~ .,
data = subset(croatia, select = -c(coded_country, c19ProSo01, c19ProSo03, c19ProSo04)))
fitted_croatia3 <- lm(c19ProSo03 ~ .,
data = subset(croatia, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo04)))
fitted_croatia4 <- lm(c19ProSo04 ~ .,
data = subset(croatia, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo03)))
cat("Pro-social attitudes in Croatia predictors model summary\n\n")
i <- 1
for (model in list(fitted_croatia1, fitted_croatia2, fitted_croatia3, fitted_croatia4)) {
cat("C19ProSo0", i, "\n", sep = "")
collection <- model_evaluated(model)
cat("R-squared:", collection[[1]], "\n")
cat("R-squared Adjusted:", collection[[2]], "\n")
cat("99.999% confidence interval significant predictors:\n")
cat(collection[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(collection[[4]], "\n")
cat("\n")
for (each in collection[[3]]) {
each_model <- c(each_model, paste0("Croatia_C19ProSo0", i))
}
predictors <- c(predictors, collection[[3]])
i <- i + 1
}
others <- anti_join(cvbase, croatia)
numeric_others <- others[sapply(others, is.numeric)]
global_correlation <- cor(numeric_others, use = "complete.obs")
global_melted <- reshape2::melt(global_correlation)
global_correlation_plot <- ggplot(data = global_melted) +
geom_tile(mapping = aes(x = Var1, y = Var2, fill = value)) +
scale_fill_gradient2(low = "#6b74ff", mid = "white", high = "#e46c6c", midpoint = 0) +
labs(title = "Correlation between each of the world's predictors", x = "", y = "",
fill = "correlation") +
theme(axis.text.x = element_text(angle = 90))
global_correlation_plot
fitted_rem1 <- lm(c19ProSo01 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo02, c19ProSo03, c19ProSo04)))
fitted_rem2 <- lm(c19ProSo02 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo03, c19ProSo04)))
fitted_rem3 <- lm(c19ProSo03 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo04)))
fitted_rem4 <- lm(c19ProSo04 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo03)))
cat("Pro-social attitudes in the world predictors model summary\n\n")
res_counter <- 1
for (model in list(fitted_rem1, fitted_rem2, fitted_rem3, fitted_rem4)) {
cat("C19ProSo0", res_counter, "\n", sep = "")
res <- model_evaluated(model)
cat("R-squared value:", res[[1]], "\n")
cat("Adjusted R-squared value:", res[[2]], "\n")
cat("Significant predictors with p-value < 0.001:\n")
cat(res[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(res[[4]], "\n")
cat("\n")
for (pred in res[[3]]) {
each_model <- c(each_model, paste0("RoW_C19ProSo0", res_counter))
}
predictors <- c(predictors, res[[3]])
res_counter <- res_counter + 1
}
tables_combined <- table(predictors = predictors, models = each_model)
tables_combined <- tables_combined[, c("Croatia_C19ProSo03",
"Croatia_C19ProSo04", "RoW_C19ProSo01", "RoW_C19ProSo02", "RoW_C19ProSo03",
"RoW_C19ProSo04")]
tables_combined_plotted <- ggplot(data = as.data.frame(tables_combined)) +
geom_tile(mapping = aes(x = models, y = predictors, fill = Freq, colour = "black")) +
scale_fill_gradientn(colours = c("pink", "green")) +
theme(legend.position = "none") +
scale_x_discrete(position = "top") +
scale_y_discrete(limits = rev) +
labs(x = "Models", y = "Predictors",
title = "Significant predictors for individual models")
tables_combined_plotted
collected <- read.csv("task3.csv")
collected_clean <- na.omit(collected)
collected_clean[, 2:9] <- scale(collected_clean[, 2:9])
kfit <- kmeans(collected_clean[, 2:9], round(nrow(collected_clean) / 5), nstart = 15)
clusters <- data.frame(country = collected_clean[[1]], cluster = kfit$cluster)
target <- filter(clusters, country == "Croatia")$cluster
similar <- filter(clusters, cluster == target)
similar
colnames(similar)[colnames(similar) == "country"] <- "coded_country"
intersect <- merge(cvbase, similar, by = "coded_country", all = FALSE)
intersect <- intersect[, -ncol(intersect)]
clustered <- filter(intersect, coded_country != "Croatia")
non_numeric_columns <- sapply(clustered, function(x) !is.numeric(x))
clustered_numeric <- subset(clustered, select = !non_numeric_columns)
clustered_correlation_matrix <- cor(clustered_numeric, use = "complete.obs")
clustered_melted <- reshape2::melt(clustered_correlation_matrix)
clustered_correlation_plotted <- ggplot(data = clustered_melted) +
geom_tile(mapping = aes(x = Var1, y = Var2, fill = value)) +
scale_fill_gradient2(low = "#6b74ff", mid = "white", high = "#e46c6c", midpoint = 0) +
labs(title = "Correlation between predictors for countries similar to Croatia",
x = "", y = "", fill = "correlation") +
theme(axis.text.x = element_text(angle = 90))
clustered_correlation_plotted
fitted_clus1 <- lm(c19ProSo01 ~ .,
data = subset(clustered, select = -c(coded_country, c19ProSo02, c19ProSo03, c19ProSo04)))
fitted_clus2 <- lm(c19ProSo02 ~ .,
data = subset(clustered, select = -c(coded_country, c19ProSo01, c19ProSo03, c19ProSo04)))
fitted_clus3 <- lm(c19ProSo03 ~ .,
data = subset(clustered, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo04)))
fitted_clus4 <- lm(c19ProSo04 ~ .,
data = subset(clustered, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo03)))
cat("Summary of models for predicting pro-social attitudes in countries similar to the Croatia\n\n")
counter <- 1
for (model in list(fitted_clus1, fitted_clus2, fitted_clus3, fitted_clus4)) {
cat("C19ProSo0", counter, "\n", sep = "")
res <- model_evaluated(model)
cat("R-squared value:", res[[1]], "\n")
cat("Adjusted R-squared value:", res[[2]], "\n")
cat("Significant predictors with p-value < 0.001:\n")
cat(res[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(res[[4]], "\n")
cat("\n")
counter <- counter + 1
}
model_eval_2 <- function(model) {
rsqr <- summary(model)$r.squared
a_rsqr <- summary(model)$adj.r.squared
sig <- which(summary(model)$coefficients[-1, 4] < 0.05) + 1
preds <- rownames(summary(model)$coefficients[sig, , drop = FALSE])
coefs <- summary(model)$coefficients[sig, 1]
return(list(rsqr, a_rsqr, preds, coefs))
}
cat("Summary of models for predicting pro-social attitudes in countries similar to Croatia\n\n")
counter <- 1
for (model in list(fitted_clus1, fitted_clus2, fitted_clus3, fitted_clus4)) {
cat("C19ProSo0", counter, "\n", sep = "")
res <- model_eval_2(model)
cat("R-squared value:", res[[1]], "\n")
cat("Adjusted R-squared value:", res[[2]], "\n")
cat("Significant predictors with p-value < 0.05:\n")
cat(res[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(res[[4]], "\n")
cat("\n")
for (each in res[[3]]) {
each_model <- c(each_model, paste0("Similar_C19ProSo0", counter))
}
predictors <- c(predictors, res[[3]])
counter <- counter + 1
}
summary_table <- table(predictors = predictors, models = each_model)
colnames(summary_table)
summary_table <- summary_table[, c("Croatia_C19ProSo03",
"Croatia_C19ProSo04", "RoW_C19ProSo01", "RoW_C19ProSo02", "RoW_C19ProSo03", "RoW_C19ProSo04",
"Similar_C19ProSo01", "Similar_C19ProSo02", "Similar_C19ProSo03", "Similar_C19ProSo04"
)]
summ_table_vis_2 <- ggplot(data = as.data.frame(summary_table)) +
geom_tile(mapping = aes(x = models, y = predictors, fill = Freq, colour = "black")) +
scale_fill_gradientn(colours = c("pink", "green")) +
theme(legend.position = "none") +
scale_x_discrete(position = "top") +
scale_y_discrete(limits = rev) +
labs(x = "Pro-social attitudes", y = "Predictors",
title = "Table of significant predictors for each pro-social attitude") +
theme(axis.text.x = element_text(angle = 90))
summ_table_vis_2
head(cvbase)
collected
library(cluster)
clusplot(collected_clean, kfit$cluster, color = TRUE, shade = TRUE, labels = 0, lines = 0)
rm(list = ls())
set.seed(31865224)
cvbase = read.csv("PsyCoronaBaselineExtract.csv")
cvbase <- cvbase[sample(nrow(cvbase), 40000), ]
library(ggplot2)
library(dplyr)
library(tidyr)
dim(cvbase)
as.data.frame(sapply(cvbase, class))
summary(cvbase, na.rm = TRUE)
sort(unique(cvbase$coded_country))
table(cvbase$coded_country)
max(table(cvbase$coded_country))
which(table(cvbase$coded_country) == max(table(cvbase$coded_country)))
min(table(cvbase$coded_country))
which(table(cvbase$coded_country) == min(table(cvbase$coded_country)))
cvbase[is.na(cvbase)] <- 0
croatia <- cvbase[cvbase$coded_country == "Croatia", ]
others <- anti_join(cvbase, croatia)
numeric_cols <- sapply(croatia, is.numeric)
means <- colMeans(croatia[, numeric_cols], na.rm = TRUE)
croatia_means <- data.frame(mean = means)
numeric_cols <- sapply(others, is.numeric)
others_means <- colMeans(others[, numeric_cols], na.rm = TRUE)
others_means <- data.frame(mean = others_means)
croatia_plotted <- ggplot(croatia_means) +
geom_bar(mapping = aes(x = rownames(croatia_means), y = mean), stat = "identity",
fill = "blue") +
coord_flip() +
labs(x = "Survey questions", y = "Mean responses",
title = "Mean of responses for each question in Croatia")
world_plotted <- ggplot(others_means) +
geom_bar(mapping = aes(x = rownames(others_means), y = mean), stat = "identity",
fill = "red") +
coord_flip() +
labs(x = "Survey questions", y = "Mean responses",
title = "Mean of responses for each question over the globe")
croatia_plotted
world_plotted
numeric_croatia <- croatia[sapply(croatia, is.numeric)]
croatia_correlation <- cor(numeric_croatia, use = "complete.obs")
#diag(croatia_cor) <- NA
croatia_melted <- reshape2::melt(croatia_correlation, na.rm = TRUE)
croatia_correlation_plot <- ggplot(data = croatia_melted, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "#6b74ff", mid = "white", high = "#e46c6c", midpoint = 0) +
labs(title = "Correlation between each of Croatia's predictors", x = "", y = "",
fill = "correlation") +
theme(axis.text.x = element_text(angle = 90))
croatia_correlation_plot
predictors <- NULL
each_model <- NULL
model_evaluated <- function(model) {
rsquared <- summary(model)$r.squared
adjusted_rsquared <- summary(model)$adj.r.squared
sig <- which(summary(model)$coefficients[-1, 4] < 0.001) + 1
predictor <- rownames(summary(model)$coefficients[sig, , drop = FALSE])
coefficient <- summary(model)$coefficients[sig, 1]
return(list(rsquared, adjusted_rsquared, predictor, coefficient))
}
fitted_croatia1 <- lm(c19ProSo01 ~ .,
data = subset(croatia, select = -c(coded_country, c19ProSo02, c19ProSo03, c19ProSo04)))
fitted_croatia2 <- lm(c19ProSo02 ~ .,
data = subset(croatia, select = -c(coded_country, c19ProSo01, c19ProSo03, c19ProSo04)))
fitted_croatia3 <- lm(c19ProSo03 ~ .,
data = subset(croatia, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo04)))
fitted_croatia4 <- lm(c19ProSo04 ~ .,
data = subset(croatia, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo03)))
cat("Pro-social attitudes in Croatia predictors model summary\n\n")
i <- 1
for (model in list(fitted_croatia1, fitted_croatia2, fitted_croatia3, fitted_croatia4)) {
cat("C19ProSo0", i, "\n", sep = "")
collection <- model_evaluated(model)
cat("R-squared:", collection[[1]], "\n")
cat("R-squared Adjusted:", collection[[2]], "\n")
cat("99.999% confidence interval significant predictors:\n")
cat(collection[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(collection[[4]], "\n")
cat("\n")
for (each in collection[[3]]) {
each_model <- c(each_model, paste0("Croatia_C19ProSo0", i))
}
predictors <- c(predictors, collection[[3]])
i <- i + 1
}
others <- anti_join(cvbase, croatia)
numeric_others <- others[sapply(others, is.numeric)]
global_correlation <- cor(numeric_others, use = "complete.obs")
global_melted <- reshape2::melt(global_correlation)
global_correlation_plot <- ggplot(data = global_melted) +
geom_tile(mapping = aes(x = Var1, y = Var2, fill = value)) +
scale_fill_gradient2(low = "#6b74ff", mid = "white", high = "#e46c6c", midpoint = 0) +
labs(title = "Correlation between each of the world's predictors", x = "", y = "",
fill = "correlation") +
theme(axis.text.x = element_text(angle = 90))
global_correlation_plot
fitted_rem1 <- lm(c19ProSo01 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo02, c19ProSo03, c19ProSo04)))
fitted_rem2 <- lm(c19ProSo02 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo03, c19ProSo04)))
fitted_rem3 <- lm(c19ProSo03 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo04)))
fitted_rem4 <- lm(c19ProSo04 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo03)))
cat("Pro-social attitudes in the world predictors model summary\n\n")
res_counter <- 1
for (model in list(fitted_rem1, fitted_rem2, fitted_rem3, fitted_rem4)) {
cat("C19ProSo0", res_counter, "\n", sep = "")
res <- model_evaluated(model)
cat("R-squared value:", res[[1]], "\n")
cat("Adjusted R-squared value:", res[[2]], "\n")
cat("Significant predictors with p-value < 0.001:\n")
cat(res[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(res[[4]], "\n")
cat("\n")
for (pred in res[[3]]) {
each_model <- c(each_model, paste0("RoW_C19ProSo0", res_counter))
}
predictors <- c(predictors, res[[3]])
res_counter <- res_counter + 1
}
tables_combined <- table(predictors = predictors, models = each_model)
tables_combined <- tables_combined[, c("Croatia_C19ProSo03",
"Croatia_C19ProSo04", "RoW_C19ProSo01", "RoW_C19ProSo02", "RoW_C19ProSo03",
"RoW_C19ProSo04")]
tables_combined_plotted <- ggplot(data = as.data.frame(tables_combined)) +
geom_tile(mapping = aes(x = models, y = predictors, fill = Freq, colour = "black")) +
scale_fill_gradientn(colours = c("pink", "green")) +
theme(legend.position = "none") +
scale_x_discrete(position = "top") +
scale_y_discrete(limits = rev) +
labs(x = "Models", y = "Predictors",
title = "Significant predictors for individual models")
tables_combined_plotted
collected <- read.csv("task3.csv")
collected_clean <- na.omit(collected)
collected_clean[, 2:9] <- scale(collected_clean[, 2:9])
kfit <- kmeans(collected_clean[, 2:9], round(nrow(collected_clean) / 5), nstart = 15)
clusters <- data.frame(country = collected_clean[[1]], cluster = kfit$cluster)
target <- filter(clusters, country == "Croatia")$cluster
similar <- filter(clusters, cluster == target)
similar
colnames(similar)[colnames(similar) == "country"] <- "coded_country"
intersect <- merge(cvbase, similar, by = "coded_country", all = FALSE)
intersect <- intersect[, -ncol(intersect)]
clustered <- filter(intersect, coded_country != "Croatia")
non_numeric_columns <- sapply(clustered, function(x) !is.numeric(x))
clustered_numeric <- subset(clustered, select = !non_numeric_columns)
clustered_correlation_matrix <- cor(clustered_numeric, use = "complete.obs")
clustered_melted <- reshape2::melt(clustered_correlation_matrix)
clustered_correlation_plotted <- ggplot(data = clustered_melted) +
geom_tile(mapping = aes(x = Var1, y = Var2, fill = value)) +
scale_fill_gradient2(low = "#6b74ff", mid = "white", high = "#e46c6c", midpoint = 0) +
labs(title = "Correlation between predictors for countries similar to Croatia",
x = "", y = "", fill = "correlation") +
theme(axis.text.x = element_text(angle = 90))
clustered_correlation_plotted
fitted_clus1 <- lm(c19ProSo01 ~ .,
data = subset(clustered, select = -c(coded_country, c19ProSo02, c19ProSo03, c19ProSo04)))
fitted_clus2 <- lm(c19ProSo02 ~ .,
data = subset(clustered, select = -c(coded_country, c19ProSo01, c19ProSo03, c19ProSo04)))
fitted_clus3 <- lm(c19ProSo03 ~ .,
data = subset(clustered, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo04)))
fitted_clus4 <- lm(c19ProSo04 ~ .,
data = subset(clustered, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo03)))
cat("Summary of models for predicting pro-social attitudes in countries similar to the Croatia\n\n")
j <- 1
for (model in list(fitted_clus1, fitted_clus2, fitted_clus3, fitted_clus4)) {
cat("C19ProSo0", j, "\n", sep = "")
res <- model_evaluated(model)
cat("R-squared value:", res[[1]], "\n")
cat("Adjusted R-squared value:", res[[2]], "\n")
cat("Significant predictors with p-value < 0.001:\n")
cat(res[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(res[[4]], "\n")
cat("\n")
j <- j + 1
}
model_eval_2 <- function(model) {
rsqr <- summary(model)$r.squared
a_rsqr <- summary(model)$adj.r.squared
sig <- which(summary(model)$coefficients[-1, 4] < 0.05) + 1
preds <- rownames(summary(model)$coefficients[sig, , drop = FALSE])
coefs <- summary(model)$coefficients[sig, 1]
return(list(rsqr, a_rsqr, preds, coefs))
}
cat("Summary of models for predicting pro-social attitudes in countries similar to Croatia\n\n")
counter <- 1
for (model in list(fitted_clus1, fitted_clus2, fitted_clus3, fitted_clus4)) {
cat("C19ProSo0", counter, "\n", sep = "")
res <- model_eval_2(model)
cat("R-squared value:", res[[1]], "\n")
cat("Adjusted R-squared value:", res[[2]], "\n")
cat("Significant predictors with p-value < 0.05:\n")
cat(res[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(res[[4]], "\n")
cat("\n")
for (each in res[[3]]) {
each_model <- c(each_model, paste0("Similar_C19ProSo0", counter))
}
predictors <- c(predictors, res[[3]])
counter <- counter + 1
}
summary_table <- table(predictors = predictors, models = each_model)
colnames(summary_table)
summary_table <- summary_table[, c("Croatia_C19ProSo03",
"Croatia_C19ProSo04", "RoW_C19ProSo01", "RoW_C19ProSo02", "RoW_C19ProSo03", "RoW_C19ProSo04",
"Similar_C19ProSo01", "Similar_C19ProSo02", "Similar_C19ProSo03", "Similar_C19ProSo04"
)]
summ_table_vis_2 <- ggplot(data = as.data.frame(summary_table)) +
geom_tile(mapping = aes(x = models, y = predictors, fill = Freq, colour = "black")) +
scale_fill_gradientn(colours = c("pink", "green")) +
theme(legend.position = "none") +
scale_x_discrete(position = "top") +
scale_y_discrete(limits = rev) +
labs(x = "Pro-social attitudes", y = "Predictors",
title = "Table of significant predictors for each pro-social attitude") +
theme(axis.text.x = element_text(angle = 90))
summ_table_vis_2
head(cvbase)
collected
library(cluster)
clusplot(collected_clean, kfit$cluster, color = TRUE, shade = TRUE, labels = 0, lines = 0)
fitted_rest1 <- lm(c19ProSo01 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo02, c19ProSo03, c19ProSo04)))
fitted_rest2 <- lm(c19ProSo02 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo03, c19ProSo04)))
fitted_rest3 <- lm(c19ProSo03 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo04)))
fitted_rest4 <- lm(c19ProSo04 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo03)))
cat("Pro-social attitudes in the world predictors model summary\n\n")
res_counter <- 1
for (model in list(fitted_rest1, fitted_rest2, fitted_rest3, fitted_rest4)) {
cat("C19ProSo0", res_counter, "\n", sep = "")
res <- model_evaluated(model)
cat("R-squared:", res[[1]], "\n")
cat("Adjusted R-squared:", res[[2]], "\n")
cat("99.9% confidence interval significant predictors:\n")
cat(res[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(res[[4]], "\n")
cat("\n")
for (pred in res[[3]]) {
each_model <- c(each_model, paste0("RoW_C19ProSo0", res_counter))
}
predictors <- c(predictors, res[[3]])
res_counter <- res_counter + 1
}
fitted_rest1 <- lm(c19ProSo01 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo02, c19ProSo03, c19ProSo04)))
fitted_rest2 <- lm(c19ProSo02 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo03, c19ProSo04)))
fitted_rest3 <- lm(c19ProSo03 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo04)))
fitted_rest4 <- lm(c19ProSo04 ~ .,
data = subset(others, select = -c(coded_country, c19ProSo01, c19ProSo02, c19ProSo03)))
cat("Pro-social attitudes in the world predictors model summary\n\n")
res_counter <- 1
for (model in list(fitted_rest1, fitted_rest2, fitted_rest3, fitted_rest4)) {
cat("C19ProSo0", res_counter, "\n", sep = "")
res <- model_evaluated(model)
cat("R-squared:", res[[1]], "\n")
cat("Adjusted R-squared:", res[[2]], "\n")
cat("99.9% confidence interval significant predictors:\n")
cat(res[[3]], "\n")
cat("Coefficients of predictors:\n")
cat(res[[4]], "\n")
cat("\n")
for (pred in res[[3]]) {
each_model <- c(each_model, paste0("RoW_C19ProSo0", res_counter))
}
predictors <- c(predictors, res[[3]])
res_counter <- res_counter + 1
}
